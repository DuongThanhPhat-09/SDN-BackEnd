#!/usr/bin/env node

const app = require('../app');
const http = require('http');
const debug = require('debug')('simple-quiz-api:server');
const mongoose = require('mongoose');

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

(async function start() {
  try {
    mongoose.set('strictQuery', true);
    await mongoose.connect(process.env.MONGODB_URI, { dbName: 'SimpleQuiz' });
    console.log('MongoDB connected');

    const server = http.createServer(app);
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
  } catch (err) {
    console.error('DB connection failed:', err.message);
    process.exit(1);
  }
})();

function normalizePort(val){const p=parseInt(val,10);if(isNaN(p))return val;if(p>=0)return p;return false;}
function onError(error){if(error.syscall!=='listen')throw error;const bind=typeof port==='string'?'Pipe '+port:'Port '+port;
  switch(error.code){case 'EACCES':console.error(bind+' requires elevated privileges');process.exit(1);break;
  case 'EADDRINUSE':console.error(bind+' is already in use');process.exit(1);break;default:throw error;}}
function onListening(){const addr=this.address();const bind=typeof addr==='string'?'pipe '+addr:'port '+addr.port;debug('Listening on '+bind);}
